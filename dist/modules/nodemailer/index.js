"use strict";function NodeMailer(a){this.transport={},this.options={from:{},sender:{},to:[],subject:"",html:"",text:"",cc:[],bcc:[],encoding:"utf-8",replyTo:""},this.defaultOption=_.omit(_.clone(this.options),["from","sender"]),this.logger=a,this.completeClean=!1}var nodemailer=require("nodemailer"),smtpTransport=require("nodemailer-smtp-transport"),_=require("lodash"),joi=require("joi"),striptags=require("striptags"),Promise=require("promise"),Smtp=require("smtp-connection");NodeMailer.prototype.processCompleteClean=function(a){return _.isUndefined(a)||_.isNull(a)||!_.isBoolean(a)||(this.completeClean=a,this.logger.info(["[ NodeMailer.setConfig ] -",a?"Enable":"Disable","Complete clean of object."].join(" "))),_.isBoolean(this.completeClean)},NodeMailer.prototype.setConfig=function(a){var b=this;return new Promise(function(c,d){var e=joi.object().keys({port:joi.number().required().min(0).max(65536),host:joi.string().required(),secure:joi["boolean"]().required(),auth:joi.object().keys({user:joi.string().email().required(),pass:joi.string().required()}).allow("user","pass"),ignoreTLS:joi["boolean"]().optional(),name:joi.string().optional(),localAddress:joi.string().optional(),connectionTimeout:joi.number().min(0)["default"](3e4),greetingTimeout:joi.number().min(0)["default"](1e4),socketTimeout:joi.number().min(0)["default"](3e4),debug:joi["boolean"]()["default"](!1)}).allow("host","secureConnection","port","auth","ignoreTLS","localAddress","connectionTimeout","greetingTimeout","socketTimeout","debug").required(),f=joi.validate(a,e);if(_.isEmpty(f)||_.isEmpty(f.error)){a=f.value,b.logger.info("[ NodeMailer.setConfig ] - STMP Config seems to be valid."),b.logger.debug("[ NodeMailer.setConfig ] - Creating transport"),b.transport=nodemailer.createTransport(smtpTransport(a)),b.logger.info("[ NodeMailer.setConfig ] - Testing SMTP Connection");var g=_.omit(_.clone(a),"auth"),h=_.omit(_.clone(a),["host","secureConnection","port"]),i=new Smtp(g),j="Connection test succed. Ready to use smtp connection";i.on("error",function(a){j=["[ NodeMailer.setConfig ] - Cannot connect to provided host.",a].join(" "),b.logger.error(j),d(j),i.quit()}),i.on("connect",function(){b.logger.info(["[ NodeMailer.setConfig ] - Connect on SMTP success.","Try to use given credidentials."].join(" ")),i.login(h.auth,function(a){a?(j=["[ NodeMailer.setConfig ] - Invalid credidentials.","SMTP error is :",a.response].join(" "),b.logger.error(j),d(j)):c(j),i.quit()})}),i.connect()}else b.logger.error("[ NodeMailer.setConfig ] - Setting smtp getting errors :"),_.each(f.error.details,function(a){b.logger.error(["[ NodeMailer.setConfig ] -",a.message].join(" "))}),d("[ NodeMailer.setConfig ] - Error Occurs. Please check given configuration")})},NodeMailer.prototype.setExpeditor=function(a,b){var c={address:a,name:b},d={address:joi.string().email().required().trim(),name:joi.string()},e=joi.validate(c,d);return _.isNull(e.error)?(_.merge(this.options.from,c),this.options.sender=c.address,!0):(_.each(e.error.details,function(a){this.logger.error(["[ NodeMailer.setExpeditor ] - Cannot set expeditor.","Error is :",a.message].join(" "))},this),!1)},NodeMailer.prototype.addRecipient=function(a,b,c){var d=joi.object().keys({address:joi.string().email().required().trim(),name:joi.string(),type:joi.string()["default"]("to").allow("to","cc","bcc")}),e={address:a,name:b,type:c},f=joi.validate(e,d);return _.isNull(f.error)?_.isUndefined(_.find(this.options[f.value.type],{address:a},"address"))?(c=f.value.type,f.value=_.omit(f.value,"type"),this.options[c].push(f.value),this.logger.info(["[ NodeMailer.addRecipient ] - email :",f.value.address,"was added into current send list, into [",c,"] rules"].join(" ")),!0):(this.logger.warning(["[ NodeMailer.addRecipient ] - Cannot add recipient.","email already in",f.value.type,"list.",a,"was omit"].join(" ")),!1):(_.each(f.error.details,function(a){this.logger.error(["[ NodeMailer.addRecipient ] - Cannot add recipient.","Error is :",a.message].join(" "))},this),!1)},NodeMailer.prototype.addReplyTo=function(a){var b=joi.string().email().required().trim(),c=joi.validate(a,b);return _.isNull(c.error)?(this.options.replyTo=a,!0):(_.each(c.error.details,function(a){this.logger.error(["[ NodeMailer.addReplyTo ] - Cannot add a reply-to.","Error is :",a.message].join(" "))},this),!1)},NodeMailer.prototype.send=function(a,b){this.logger.debug("[ NodeMailer.send ] - Try sending a new email ..."),this.options.html=_.isString(b)&&!_.isEmpty(b)?b:"",_.isEmpty(this.options.html)||(this.options.text=striptags(b)),this.options.subject=_.isString(a)?a:"";var c=this;return new Promise(function(a,b){if(c.isReady(!0)){var d=_.clone(c.options);c.logger.debug("[ NodeMailer.send ] - Cleanning object before send request"),c.clean(),c.clean(!1,!0)||(c.logger.error(["[ NodeMailer.send ] - can't send email","option object is not properly clean"].join(" ")),b("[ NodeMailer.send ] - can't send email option object is not properly clean")),c.logger.info("[ NodeMailer.send ] - Sending a new email ..."),c.transport.sendMail(d,function(c,d){c?b(c):a(d)})}else c.logger.error("[ NodeMailer.send ] - can't send mail, invalid configuration."),b("[ NodeMailer.send ] - can't send mail, invalid configuration.")})},NodeMailer.prototype.clean=function(a,b){if(!_.isBoolean(b)||_.isBoolean(b)&&b===!1)this.options.subject=this.options.html=this.options.text="",this.options.to=[],this.options.cc=[],this.options.bcc=[],_.isBoolean(a)&&a===!0&&_.extend(this.options,this.defaultOption),this.completeClean&&(this.options.from={});else{var c=joi.object().keys({from:this.completeClean?joi.object().empty({}):joi.object().keys({address:joi.string().email().required().trim(),name:joi.string()}),to:joi.array().length(0),cc:joi.array().length(0),bcc:joi.array().length(0),subject:joi.string().empty(""),html:joi.string().empty(""),text:joi.string().empty(""),replyTo:joi.string().empty("")}).unknown(),d=joi.validate(this.options,c);if(!_.isNull(d.error))return _.each(d.error.details,function(a){this.logger.error(["[ NodeMailer.clean ] - Cannot clean current object.","Error is :",a.message].join(" "))},this),!1}return!0},NodeMailer.prototype.isReady=function(a){var b=joi.object().keys({from:joi.object().keys({address:joi.string().email().required().trim(),name:joi.string().optional()}),html:joi.string().required(),subject:joi.string().required(),to:joi.array().items(joi.object().keys({address:joi.string().email().required().trim(),name:joi.string()})).min(1),cc:joi.array().items(joi.object().keys({address:joi.string().email().required().trim(),name:joi.string()})),bcc:joi.array().items(joi.object().keys({address:joi.string().email().required().trim(),name:joi.string()})),text:joi.string().required(),sender:joi.string().email().required().trim()}).unknown(),c=joi.validate(this.options,b);return _.isBoolean(a)&&a===!0&&(_.isNull(c.error)||_.each(c.error.details,function(a){this.logger.error(["[ NodeMailer.isReady ] - Invalid items error is :",a.message].join(" "))},this)),!_.isEmpty(this.transport)&&_.isNull(c.error)},module.exports=function(a){return new NodeMailer(a)};