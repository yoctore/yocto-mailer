"use strict";function Sender(e,t){this.debug=process.env.DEBUG||!1,this.logger=e,this.debuger=debuger(e),this.factory=factory(this.logger),this.message={},this.type=this.factory.NODEMAILER_TYPE,this.STATE_PENDING="pending",this.STATE_SUCCESS="success",this.STATE_ERROR="error",this.STATE_READY="ready",this.state={code:"pending",message:null},this.sandbox=sandbox(this.logger),this.options=t}var logger=require("yocto-logger"),_=require("lodash"),Q=require("q"),factory=require("./factory"),sandbox=require("../sandbox"),debuger=require("../debugger");Sender.prototype.store=function(e,t){return this.message=e,Object.freeze(this.message),this.type=t,this},Sender.prototype.toObject=function(){return this.message},Sender.prototype.updateState=function(e,t){return this.state.code=e||this.STATE_PENDING,this.state.message=t||null,_.has(this.state,"code")&&_.has(this.state,"message")&&this.state.code===e&&this.state.message===t},Sender.prototype.createTransport=function(){var e=this.factory.createTransporter(this.type,this.options);return this.updateState(e?this.STATE_READY:this.STATE_ERROR,e?"Transport is ready":"Cannot create transport"),this.updateState(e?this.STATE_READY:this.STATE_ERROR,e?"Transport is ready":"Cannot create transport"),e},Sender.prototype.updateAndBuildStats=function(e,t,s){var r=process.hrtime(e);return this.logger.debug(["[ Sender.send ] - processing requests was take :",r[0],"secondes and",r[1]/1e6,"milliseconds"].join(" ")),this.updateState(s),{response:t,stats:{milliseconds:r[1],seconds:r[0]}}},Sender.prototype.send=function(e,t,s,r,i){var n=Q.defer(),o=process.hrtime();if(r=!!_.isBoolean(r)&&r,_.isEmpty(this.message)&&!r)n.reject("Message in empty. Build your messsage before send.");else{var a=this.createTransport();this.state.code===this.STATE_READY?a.isReady().then(function(){this.logger.debug(["[ Sender.send ] -",this.type,"Connector is ready"].join(" ")),(a=this.sandbox.check(a,this.message)).send(this.message,e,t,s,i).then(function(e){return e=this.updateAndBuildStats(o,e,this.STATE_SUCCESS),n.resolve(e)}.bind(this)).catch(function(e){this.debug&&this.debuger.debug("[ Sender.send ] - Full error response is :",e),e=this.updateAndBuildStats(o,e,this.STATE_ERROR),n.reject(e)}.bind(this))}.bind(this)).catch(function(e){n.reject(e)}):n.reject(["Transport is on an invalid state. state must be on",this.STATE_READY,"state before sending"].join(" "))}return n.promise},module.exports=function(e,t){return(_.isUndefined(e)||_.isNull(e))&&(logger.warning("[ Sender.constructor ] - Invalid logger given. Use internal logger"),e=logger),new Sender(e,t)};